# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Dell\.designer\backup\newIMUsoftware.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from matplotlib.backends.backend_qt5agg import (FigureCanvasQTAgg, NavigationToolbar2QT as NavigationToolbar)
from PyQt5.QtWidgets import QWidget,QGridLayout,QToolBar,QStatusBar,QMessageBox,QVBoxLayout,QAction
from matplotlib.figure import Figure
from PyQt5 import QtCore, QtGui, QtWidgets
import numpy as np

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1125, 846)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.start = QtWidgets.QPushButton(self.centralwidget)
        self.start.setGeometry(QtCore.QRect(910, 660, 191, 61))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.start.setFont(font)
        self.start.setAutoFillBackground(False)
        self.start.setStyleSheet("QPushButton{qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(255, 178, 102, 255), stop:0.55 rgba(235, 148, 61, 255), stop:0.98 rgba(0, 0, 0, 255), stop:1 rgba(0, 0, 0, 0))}")
        self.start.setCheckable(False)
        self.start.setChecked(False)
        self.start.setAutoRepeat(False)
        self.start.setFlat(False)
        self.start.setObjectName("start")
        self.hour = QtWidgets.QTextBrowser(self.centralwidget)
        self.hour.setGeometry(QtCore.QRect(940, 540, 41, 41))
        self.hour.setObjectName("hour")
        self.min = QtWidgets.QTextBrowser(self.centralwidget)
        self.min.setGeometry(QtCore.QRect(980, 540, 41, 41))
        self.min.setObjectName("min")
        self.sec = QtWidgets.QTextBrowser(self.centralwidget)
        self.sec.setGeometry(QtCore.QRect(1020, 540, 41, 41))
        self.sec.setObjectName("sec")
        self.Home = QtWidgets.QTabWidget(self.centralwidget)
        self.Home.setGeometry(QtCore.QRect(0, 0, 901, 721))
        self.Home.setStyleSheet("QTabwidget{rgb(255, 0, 0)}")
        self.Home.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.Home.setObjectName("Home")
        self.home = QtWidgets.QWidget()
        self.home.setObjectName("home")
        self.Home.addTab(self.home, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.Home.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.Home.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.Home.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.Home.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.Home.addTab(self.tab_6, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.Home.addTab(self.tab_7, "")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.Home.addTab(self.tab_8, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.Home.addTab(self.tab_9, "")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(933, 600, 141, 41))
        self.textEdit.setObjectName("textEdit")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(100, 740, 671, 51))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1125, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuFile.menuAction())
        # dynamic_canvas1 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax1,self._ay1,self._az1,self._gx1,self._gy1,self._gz1 = dynamic_canvas1.figure.subplots(nrows=6)
        # layout1= QGridLayout()
        # layout1.addWidget(dynamic_canvas1)
        # layout1.addWidget(NavigationToolbar(dynamic_canvas1,None))
        # self.tab_2.setLayout(layout1)
        # dynamic_canvas2 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax2,self._ay2,self._az2,self._gx2,self._gy2,self._gz2 = dynamic_canvas2.figure.subplots(nrows=6)
        # dynamic_canvas3 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax3,self._ay3,self._az3,self._gx3,self._gy3,self._gz3 = dynamic_canvas3.figure.subplots(nrows=6)
        # dynamic_canvas4 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax4,self._ay4,self._az4,self._gx4,self._gy4,self._gz4 = dynamic_canvas4.figure.subplots(nrows=6)
        # dynamic_canvas5 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax5,self._ay5,self._az5,self._gx5,self._gy5,self._gz5 = dynamic_canvas5.figure.subplots(nrows=6)
        # dynamic_canvas6 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax6,self._ay6,self._az6,self._gx6,self._gy6,self._gz6 = dynamic_canvas6.figure.subplots(nrows=6)
        # dynamic_canvas7 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax7,self._ay7,self._az7,self._gx7,self._gy7,self._gz7 = dynamic_canvas7.figure.subplots(nrows=6)
        # dynamic_canvas8 = FigureCanvasQTAgg(Figure(figsize=(5,3)))
        # self._ax8,self._ay8,self._az8,self._gx8,self._gy8,self._gz8 = dynamic_canvas8.figure.subplots(nrows=6)
        # self.t=np.linspace(0,9,300)
        # self.n=0
        # self._line1, = self._ax1.plot(self.t,self.t,color='orange')
        # self._line2, = self._ay1.plot(self.t,self.t,color='green')
        # self._line3, = self._az1.plot(self.t,self.t,color='red')
        # self._line4, = self._gx1.plot(self.t,self.t,color='blue')
        # self._line5, = self._gy1.plot(self.t,self.t,color='brown')
        # self._line6, = self._gz1.plot(self.t,self.t,color='yellow')
        # self._line11, = self._ax2.plot(self.t,self.t,color='orange')
        # self._line12, = self._ay2.plot(self.t,self.t,color='green')
        # self._line13, = self._az2.plot(self.t,self.t,color='red')
        # self._line14, = self._gx2.plot(self.t,self.t,color='blue')
        # self._line15, = self._gy2.plot(self.t,self.t,color='brown')
        # self._line16, = self._gz2.plot(self.t,self.t,color='yellow')
        # self._line21, = self._ax3.plot(self.t,self.t,color='orange')
        # self._line22, = self._ay3.plot(self.t,self.t,color='green')
        # self._line23, = self._az3.plot(self.t,self.t,color='red')
        # self._line24, = self._gx3.plot(self.t,self.t,color='blue')
        # self._line25, = self._gy3.plot(self.t,self.t,color='brown')
        # self._line26, = self._gz3.plot(self.t,self.t,color='yellow')
        # self._line31, = self._ax4.plot(self.t,self.t,color='orange')
        # self._line32, = self._ay4.plot(self.t,self.t,color='green')
        # self._line33, = self._az4.plot(self.t,self.t,color='red')
        # self._line34, = self._gx4.plot(self.t,self.t,color='blue')
        # self._line35, = self._gy4.plot(self.t,self.t,color='brown')
        # self._line36, = self._gz4.plot(self.t,self.t,color='yellow')
        # self._line41, = self._ax5.plot(self.t,self.t,color='orange')
        # self._line42, = self._ay5.plot(self.t,self.t,color='green')
        # self._line43, = self._az5.plot(self.t,self.t,color='red')
        # self._line44, = self._gx5.plot(self.t,self.t,color='blue')
        # self._line45, = self._gy5.plot(self.t,self.t,color='brown')
        # self._line46, = self._gz5.plot(self.t,self.t,color='yellow')
        # self._line51, = self._ax6.plot(self.t,self.t,color='orange')
        # self._line52, = self._ay6.plot(self.t,self.t,color='green')
        # self._line53, = self._az6.plot(self.t,self.t,color='red')
        # self._line54, = self._gx6.plot(self.t,self.t,color='blue')
        # self._line55, = self._gy6.plot(self.t,self.t,color='brown')
        # self._line56, = self._gz6.plot(self.t,self.t,color='yellow')
        # self._line61, = self._ax7.plot(self.t,self.t,color='orange')
        # self._line62, = self._ay7.plot(self.t,self.t,color='green')
        # self._line63, = self._az7.plot(self.t,self.t,color='red')
        # self._line64, = self._gx7.plot(self.t,self.t,color='blue')
        # self._line65, = self._gy7.plot(self.t,self.t,color='brown')
        # self._line66, = self._gz7.plot(self.t,self.t,color='yellow')
        # self._line71, = self._ax8.plot(self.t,self.t,color='orange')
        # self._line72, = self._ay8.plot(self.t,self.t,color='green')
        # self._line73, = self._az8.plot(self.t,self.t,color='red')
        # self._line74, = self._gx8.plot(self.t,self.t,color='blue')
        # self._line75, = self._gy8.plot(self.t,self.t,color='brown')
        # self._line76, = self._gz8.plot(self.t,self.t,color='yellow')
        
        # # Set up a Line2D.
        
        # self.setaxislimits(self._ax1,self._ay1,self._az1,self._gx1,self._gy1,self._gz1)
        # self.setaxislimits(self._ax2,self._ay2,self._az2,self._gx2,self._gy2,self._gz2)
        # self.setaxislimits(self._ax3,self._ay3,self._az3,self._gx3,self._gy3,self._gz3)
        # self.setaxislimits(self._ax4,self._ay4,self._az4,self._gx4,self._gy4,self._gz4)
        # self.setaxislimits(self._ax5,self._ay5,self._az5,self._gx5,self._gy5,self._gz5)
        # self.setaxislimits(self._ax6,self._ay6,self._az6,self._gx6,self._gy6,self._gz6)
        # self.setaxislimits(self._ax7,self._ay7,self._az7,self._gx7,self._gy7,self._gz7)
        # self.setaxislimits(self._ax8,self._ay8,self._az8,self._gx8,self._gy8,self._gz8)
        
        # layout2= QGridLayout()
        # layout2.addWidget(dynamic_canvas2)
        # layout2.addWidget(NavigationToolbar(dynamic_canvas2, None))
        # layout3= QGridLayout()
        # layout3.addWidget(dynamic_canvas3)
        # layout3.addWidget(NavigationToolbar(dynamic_canvas3, None))
        # layout4= QGridLayout()
        # layout4.addWidget(dynamic_canvas4)
        # layout4.addWidget(NavigationToolbar(dynamic_canvas4, None))
        # layout5= QGridLayout()
        # layout5.addWidget(dynamic_canvas5)
        # layout5.addWidget(NavigationToolbar(dynamic_canvas5, None))
        # layout6= QGridLayout()
        # layout6.addWidget(dynamic_canvas6)
        # layout6.addWidget(NavigationToolbar(dynamic_canvas6, None))
        # layout7= QGridLayout()
        # layout7.addWidget(dynamic_canvas7)
        # layout7.addWidget(NavigationToolbar(dynamic_canvas7, None))
        # layout8= QGridLayout()
        # layout8.addWidget(dynamic_canvas8)
        # layout8.addWidget(NavigationToolbar(dynamic_canvas8, None))
        
        # self.tab_3.setLayout(layout2)
        # self.tab_4.setLayout(layout3)
        # self.tab_5.setLayout(layout4)
        # self.tab_6.setLayout(layout5)
        # self.tab_7.setLayout(layout6)
        # self.tab_8.setLayout(layout7)
        # self.tab_9.setLayout(layout8)

        self.retranslateUi(MainWindow)
        self.Home.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
       
    def setaxislimits(self,x1,y1,z1,x2,y2,z2):
            x1.axis(xmin=0, xmax=9, ymin=-500, ymax=500)
            y1.axis(xmin=0, xmax=9, ymin=-500, ymax=500)
            z1.axis(xmin=0, xmax=9, ymin=-500, ymax=500)
            x2.axis(xmin=0, xmax=9, ymin=-5, ymax=5)
            y2.axis(xmin=0, xmax=9, ymin=-5, ymax=5)
            z2.axis(xmin=0, xmax=9, ymin=-5, ymax=5)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.start.setText(_translate("MainWindow", "Start Recording"))
        self.Home.setTabText(self.Home.indexOf(self.home), _translate("MainWindow", "Home"))
        self.Home.setTabText(self.Home.indexOf(self.tab_2), _translate("MainWindow", "IMU1"))
        self.Home.setTabText(self.Home.indexOf(self.tab_3), _translate("MainWindow", "IMU2"))
        self.Home.setTabText(self.Home.indexOf(self.tab_4), _translate("MainWindow", "IMU3"))
        self.Home.setTabText(self.Home.indexOf(self.tab_5), _translate("MainWindow", "IMU4"))
        self.Home.setTabText(self.Home.indexOf(self.tab_6), _translate("MainWindow", "IMU5"))
        self.Home.setTabText(self.Home.indexOf(self.tab_7), _translate("MainWindow", "IMU6"))
        self.Home.setTabText(self.Home.indexOf(self.tab_8), _translate("MainWindow", "IMU7"))
        self.Home.setTabText(self.Home.indexOf(self.tab_9), _translate("MainWindow", "IMU8"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14pt; font-weight:600;\">     Timer</span></p></body></html>"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
